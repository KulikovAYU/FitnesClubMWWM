<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:FitnessClubMWWM.Ui.Desktop"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:userControls="clr-namespace:FitnessClubMWWM.Ui.Desktop.UserControls"
    mc:Ignorable="d">

    <!--  Шаблон обычной кнопки  -->
    <ControlTemplate x:Key="ButtonBaseControlTemplate" TargetType="{x:Type ButtonBase}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Storyboard1">
                <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                    <SplineColorKeyFrame KeyTime="0:0:0.3" Value="#FF008AC3" />
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Storyboard_Copy1">
                <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                    <SplineColorKeyFrame KeyTime="0:0:0.3" Value="{StaticResource TextBoksBlue}" />
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Border
            x:Name="border"
            BorderBrush="{DynamicResource BackgroundTextBoksBlue}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="4"
            RenderTransformOrigin="0.5,0.5"
            SnapsToDevicePixels="True">
            <Border.Background>
                <SolidColorBrush Color="{StaticResource TextBoksBlue}" />
            </Border.Background>
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Border.RenderTransform>
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.ExitActions>
                    <ResumeStoryboard BeginStoryboardName="Storyboard1_BeginStoryboard" />
                    <BeginStoryboard x:Name="Storyboard1_BeginStoryboard1" Storyboard="{StaticResource Storyboard_Copy1}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="Storyboard1_BeginStoryboard" Storyboard="{StaticResource Storyboard1}" />
                </Trigger.EnterActions>
                <!--<Setter TargetName="border" Property="Background" Value="#008ac3" />-->
                <Setter TargetName="border" Property="BorderBrush" Value="#FF3C7FB1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background" Value="#008ac3" />
                <Setter TargetName="border" Property="BorderBrush" Value="#008ac3" />
                <Setter TargetName="border" Property="RenderTransform">

                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.95" ScaleY="0.9" />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Setter.Value>
                </Setter>

            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="#008ac3" />
                <Setter TargetName="border" Property="BorderBrush" Value="#008ac3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5" />
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#FF838383" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Шаблон для кнопки на рабочем столе  -->
    <ControlTemplate x:Key="StartBtnControlTemplate" TargetType="{x:Type userControls:StartButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="StoryboardMouseEnterBtnLostFocus">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.97" />
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.97" />
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>

        <!--<ControlTemplate.Resources >
            <userControls:StartButton x:Key="DataItem" GeomPicture=""/>
            <userControls:StartButton x:Key="Str" ButtonComment=""/>
        </ControlTemplate.Resources>-->
        <!--<ControlTemplate.Resources >
            <userControls:StartButton x:Key="DataItem" GeomPicture=""/>
            <userControls:StartButton x:Key="Str" ButtonComment=""/>
        </ControlTemplate.Resources>-->
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            RenderTransformOrigin="0.5,0.5"
            SnapsToDevicePixels="True">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Border.RenderTransform>

            <StackPanel
                Width="Auto"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Orientation="Vertical">
                <!--  Векторная картинка  -->
                <Path
                    Width="{Binding GeomPictureWidth, RelativeSource={RelativeSource TemplatedParent}}"
                    Height="{Binding GeomPictureHeight, RelativeSource={RelativeSource TemplatedParent}}"
                    Margin="{Binding GeomPictureMargin, RelativeSource={RelativeSource TemplatedParent}}"
                    Data="{Binding GeomPicture, RelativeSource={RelativeSource TemplatedParent}}"
                    Fill="{Binding GeomPictureFill, RelativeSource={RelativeSource TemplatedParent}}"
                    Stretch="Fill" />

                <ContentPresenter
                    x:Name="contentPresenter"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding Content}"
                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    Focusable="False"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                <TextBlock
                    FontFamily="{Binding ButtonCommentFontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                    FontSize="{Binding ButtonCommentFontSize, RelativeSource={RelativeSource TemplatedParent}}"
                    Foreground="{Binding ButtonCommentBrush, RelativeSource={RelativeSource TemplatedParent}}"
                    Text="{Binding ButtonComment, RelativeSource={RelativeSource TemplatedParent}}"
                    TextAlignment="Center"
                    TextWrapping="{Binding ButtonCommentWrapping, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter TargetName="border" Property="Background" Value="#FFBEE6FD" />-->
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BackgroundThiknessGrey}" />
                <Setter TargetName="border" Property="BorderThickness" Value="2" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.97" ScaleY="0.97" />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="border" Property="Effect">
                    <Setter.Value>
                        <BlurEffect Radius="0.5" />
                    </Setter.Value>
                </Setter>
                <!--<Setter TargetName="border" Property="Background" Value="#FFC4E5F6" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FF2C628B" />-->

            </Trigger>

            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
                <!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BackgroundForegroundVeryDarkBrush}" />
                <Setter TargetName="border" Property="BorderThickness" Value="2" />-->
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5" />
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#FF838383" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="ButtonClear" TargetType="{x:Type ButtonBase}">
        <Border
            x:Name="border"
            Background="Transparent"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFBEE6FD" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FF3C7FB1" />

            </Trigger>-->
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundTextBoksBlue}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BackgroundTextBoksBlue}" />
                <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundTextBoksBlue}" />

            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5" />
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#FF838383" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Кнопка о пользователе  -->
    <ControlTemplate x:Key="AboutUserControlTemplate" TargetType="{x:Type userControls:ButtonWithPicture}">

        <ControlTemplate.Resources>
            <Style x:Key="Normal">
                <Setter Property="Path.Fill" Value="{StaticResource BackgroundForegroundVeryDarkBrush}" />
            </Style>
            <Style x:Key="Focused">
                <Setter Property="Path.Fill" Value="{StaticResource BlueColor}" />
            </Style>
        </ControlTemplate.Resources>

        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid>
                <ContentPresenter
                    x:Name="contentPresenter"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding Content}"
                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    Focusable="False"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path
                    x:Name="Picture"
                    Width="{Binding GeomPictureWidth, RelativeSource={RelativeSource TemplatedParent}}"
                    Height="{Binding GeomPictureHeight, RelativeSource={RelativeSource TemplatedParent}}"
                    Margin="{Binding GeomPictureMargin, RelativeSource={RelativeSource TemplatedParent}}"
                    Data="{Binding GeomPicture, RelativeSource={RelativeSource TemplatedParent}}"
                    Fill="{Binding GeomPictureFill, RelativeSource={RelativeSource TemplatedParent}}"
                    Stretch="Fill" />
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger SourceName="border" Property="IsMouseOver" Value="True">
                <!--<Setter TargetName="border" Property="Background" Value="#FFBEE6FD" />-->
                <Setter TargetName="border" Property="BorderBrush" Value="#FF3C7FB1" />
                <Setter TargetName="Picture" Property="Fill" Value="#0063B1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFC4E5F6" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FF2C628B" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5" />
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#FF838383" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>




    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />


    <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border
                            x:Name="border"
                            BorderBrush="Black"
                            BorderThickness="1"
                            CornerRadius="18">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Border x:Name="border1" Margin="1,1,1,1">
                                    <Ellipse
                                        x:Name="ellipse"
                                        Width="{TemplateBinding Height}"
                                        Margin="0,0,0,0"
                                        HorizontalAlignment="Left"
                                        Fill="#FF292626"
                                        RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Border>
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>-->

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ellipse" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="border" Property="Background" Value="#0066CC" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#BFBFBF" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>