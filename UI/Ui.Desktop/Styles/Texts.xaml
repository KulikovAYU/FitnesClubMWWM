<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:FitnessClubMWWM.Ui.Desktop.UserControls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:valueConverters="clr-namespace:FitnessClubMWWM.Ui.Desktop.ValueConverters"
    mc:Ignorable="d">


    <!--  Высота текстовых полей для авторизации  -->
    <Style x:Key="Size">
        <Setter Property="Control.Height" Value="50" />
    </Style>

    <!--  Начальное состояние текстбокса  -->
    <Style x:Key="FieldForLog">
        <Setter Property="TextBox.TextAlignment" Value="Left" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="Control.FontSize" Value="20" />
        <Setter Property="Control.BorderThickness" Value="2 2 2 2" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.HorizontalAlignment" Value="Left" />
    </Style>


    <!--  Шаблон текстового поля логина входа  -->
    <ControlTemplate x:Key="InputTextBox" TargetType="{x:Type TextBox}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="OnPreviewMouseLeftButtonUp1">

                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ClearButton" Storyboard.TargetProperty="(local:ClearButton.IsClear)">
                    <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False" />
                </BooleanAnimationUsingKeyFrames>

            </Storyboard>
        </ControlTemplate.Resources>

        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True"
            Style="{StaticResource Size}">
            <Grid
                Margin="10,0,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300*" />
                    <ColumnDefinition Width="30*" />
                </Grid.ColumnDefinitions>

                <ScrollViewer
                    x:Name="PART_ContentHost"
                    Grid.Column="0"
                    Margin="0"
                    VerticalAlignment="Stretch"
                    FontSize="{TemplateBinding FontSize}" />
                <TextBlock
                    x:Name="Hint"
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    FontSize="{TemplateBinding FontSize}"
                    Foreground="Gray"
                    IsHitTestVisible="False"
                    Text="{TemplateBinding Tag}"
                    Visibility="Collapsed" />

                <local:ClearButton
                    x:Name="ClearButton"
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="0,-2,-2,-2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    Template="{DynamicResource ButtonClear}">
                    <Border
                        Margin="13"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                        <Path
                            x:Name="___CloseIcon_"
                            Data="M 476,47.6L 428.4,0L 238,190.4L 47.6,0L 0,47.6L 190.4,238L 0,428.4L 47.6,476L 238,285.6L 428.4,476L 476,428.4L 285.6,238L 476,47.6 Z "
                            Fill="Gray"
                            RenderOptions.EdgeMode="Aliased"
                            Stretch="Uniform"
                            Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                            StrokeThickness="0" />
                    </Border>
                </local:ClearButton>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="VisualStateGroup" />
            </VisualStateManager.VisualStateGroups>
        </Border>

        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonUp" SourceName="ClearButton">
                <BeginStoryboard Storyboard="{StaticResource OnPreviewMouseLeftButtonUp1}" />
            </EventTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Text" Value="" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Hint" Property="Visibility" Value="Visible" />
                <Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Opacity" Value="0.56" />
            </Trigger>
            <Trigger SourceName="ClearButton" Property="IsMouseOver" Value="True">
                <Setter TargetName="___CloseIcon_" Property="Fill" Value="{StaticResource BackgroundTextBoksBlue}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BackgroundTextBoksBlue}" />
            </Trigger>
            <Trigger x:Name="Clear" SourceName="ClearButton" Property="IsPressed" Value="True">
                <Setter TargetName="___CloseIcon_" Property="Fill" Value="White" />
                <Setter TargetName="ClearButton" Property="BorderThickness" Value="0" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BackgroundTextBoksBlue}" />
            </Trigger>
            <Trigger SourceName="ClearButton" Property="IsClear" Value="True">
                <Setter Property="Text" Value="" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



    <!--  Шаблон текстового поля для пароля  -->
    <ControlTemplate x:Key="PasswordTextBox" TargetType="{x:Type PasswordBox}">

        <ControlTemplate.Resources>
            <local:PasswordHelper x:Key="PasswordHelper" PasswordString="" />
        </ControlTemplate.Resources>

        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid
                Margin="10,0,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300*" />
                    <ColumnDefinition Width="30*" />
                </Grid.ColumnDefinitions>

                <ScrollViewer
                    x:Name="PART_ContentHost"
                    Grid.Column="0"
                    Margin="0"
                    VerticalAlignment="Stretch"
                    Focusable="False"
                    FontSize="{TemplateBinding FontSize}"
                    HorizontalScrollBarVisibility="Hidden"
                    VerticalScrollBarVisibility="Hidden"
                    Visibility="Visible" />

                <TextBlock
                    x:Name="Hint"
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    FontSize="{TemplateBinding FontSize}"
                    Foreground="Gray"
                    IsHitTestVisible="False"
                    Text="{TemplateBinding Tag}"
                    Visibility="Collapsed" />

                <TextBlock
                    x:Name="ShowPassword"
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    FontSize="{TemplateBinding FontSize}"
                    IsHitTestVisible="False"
                    Text="{Binding PasswordString}"
                    Visibility="Collapsed" />


                <!--  Text="{Binding Password, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"  -->

                <!--<PasswordBox local:PasswordBoxAssistant.BindPassword="true"  local:PasswordBoxAssistant.BoundPassword="{Binding Path=Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    x:Name="Password"
                    Grid.Column="0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    FontSize="{TemplateBinding FontSize}"
                    Foreground="Gray"
                    IsHitTestVisible="False"
                >
                </PasswordBox>-->

                <local:ShowPasswordButton
                    x:Name="ShowPasswordButton"
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="0,-2,-2,-2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    Template="{DynamicResource ButtonClear}"
                    Visibility="Visible">
                    <Border
                        Margin="13,13,13,13"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                        <Path
                            x:Name="___ShowIcon_"
                            Data="F1 M 598.865,151.457L 609.332,164.669L 598.866,177.88C 597.636,179.436 568.112,216.404 517.496,253.52C 449.859,303.12 376.264,329.337 304.666,329.337C 233.071,329.337 159.476,303.12 91.8359,253.52C 41.2212,216.403 11.6973,179.436 10.466,177.88L 0,164.669L 10.4647,151.457C 11.6959,149.902 41.2199,112.933 91.8345,75.8176C 159.474,26.2174 233.07,3.05176e-005 304.665,3.05176e-005C 376.262,3.05176e-005 449.858,26.2174 517.495,75.8176C 568.111,112.934 597.635,149.902 598.865,151.457 Z M 304.665,280.027C 368.392,280.027 420.239,228.278 420.239,164.669C 420.239,101.059 368.392,49.3099 304.665,49.3099C 274.176,49.3099 246.412,61.1597 225.739,80.4816L 208.037,60.5659C 171.941,73.8763 141.245,92.5524 118.078,109.443C 89.3801,130.365 67.8731,151.525 55.605,164.669C 67.8678,177.807 89.3774,198.969 118.078,219.893C 141.245,236.783 171.94,255.459 208.037,268.77C 179.995,242.819 162.412,205.758 162.412,164.669C 162.412,153.202 163.783,142.05 166.368,131.365L 192.755,135.798C 190.363,145.029 189.09,154.703 189.09,164.669C 189.09,228.278 240.937,280.027 304.665,280.027 Z M 491.251,219.893C 519.949,198.972 541.456,177.811 553.725,164.666C 541.462,151.527 519.952,130.365 491.251,109.442C 468.083,92.5511 437.39,73.875 401.291,60.5645C 429.334,86.5157 446.918,123.578 446.918,164.667C 446.918,205.757 429.334,242.819 401.291,268.77C 437.388,255.459 468.083,236.783 491.251,219.893 Z M 231.118,142.243L 289.325,152.02L 251.398,109.35C 265.219,96.0887 283.981,87.9217 304.665,87.9217C 347.13,87.9217 381.555,122.282 381.555,164.669C 381.555,207.055 347.13,241.415 304.665,241.415C 262.199,241.415 227.774,207.054 227.774,164.669C 227.774,156.865 228.949,149.338 231.118,142.243 Z "
                            Fill="Gray"
                            RenderOptions.EdgeMode="Aliased"
                            Stretch="Uniform"
                            Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                            StrokeThickness="0" />
                    </Border>
                </local:ShowPasswordButton>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger SourceName="ShowPassword" Property="Text" Value="">
                <Setter TargetName="Hint" Property="Visibility" Value="Visible" />
                <Setter TargetName="ShowPasswordButton" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger x:Name="Clear" SourceName="ShowPasswordButton" Property="IsPressed" Value="True">
                <Setter TargetName="___ShowIcon_" Property="Fill" Value="White" />
                <Setter TargetName="ShowPasswordButton" Property="BorderThickness" Value="0" />
                <Setter TargetName="ShowPassword" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_ContentHost" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BackgroundTextBoksBlue}" />
            </Trigger>

            <Trigger SourceName="ShowPasswordButton" Property="IsFocused" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BackgroundTextBoksBlue}" />
            </Trigger>

        </ControlTemplate.Triggers>


    </ControlTemplate>








</ResourceDictionary>